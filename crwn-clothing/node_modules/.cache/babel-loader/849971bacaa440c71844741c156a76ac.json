{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/certimeter/Desktop/react/crwn-clothing/src/pages/collection/Collection.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport './CollectionStyle.scss';\nimport { selectCollection } from \"../../redux/shop/shop-selectors\";\nimport CollectionItem from \"../../components/CollectionItem/CollectionItem\";\n\nconst Collection = ({\n  collection\n}) => {\n  //Inserire una funzione nel return dell'useEffect (clean up func) equivale ad utilizzare il componentWillUnmount\n  useEffect(() => {\n    console.log(\"mounted\");\n    return () => {\n      console.log(\"unmounting\");\n    };\n  }, []);\n  console.log(collection);\n  const title = collection.title,\n        items = collection.items;\n  return React.createElement(\"div\", {\n    className: \"collection-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: \"items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }))));\n}; //Il secondo parametro ownProps indica i props di questo componente. Lo utilizziamo per passargli il nome del path (hats, jackets..)\n\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(Collection);","map":{"version":3,"sources":["/mnt/c/Users/certimeter/Desktop/react/crwn-clothing/src/pages/collection/Collection.jsx"],"names":["React","useEffect","connect","selectCollection","CollectionItem","Collection","collection","console","log","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAO,wBAAP;AACA,SAAQC,gBAAR,QAA+B,iCAA/B;AACA,OAAOC,cAAP,MAA2B,gDAA3B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AACrC;AACIL,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,WAAO,MAAM;AACTD,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;AAOAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AATiC,QAU1BG,KAV0B,GAUVH,UAVU,CAU1BG,KAV0B;AAAA,QAUnBC,KAVmB,GAUVJ,UAVU,CAUnBI,KAVmB;AAWjC,SACA;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,KAAvB,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQC,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CAFR,CAFJ,CADA;AASH,CApBD,C,CAuBA;;;AACA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC1CV,EAAAA,UAAU,EAAEH,gBAAgB,CAACa,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD;AAD8B,CAAtB,CAAxB;;AAIA,eAAeb,OAAO,CAACY,eAAD,CAAP,CAAyBT,UAAzB,CAAf","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport './CollectionStyle.scss';\r\nimport {selectCollection} from \"../../redux/shop/shop-selectors\";\r\nimport CollectionItem from \"../../components/CollectionItem/CollectionItem\";\r\n\r\nconst Collection = ({collection}) => {\r\n//Inserire una funzione nel return dell'useEffect (clean up func) equivale ad utilizzare il componentWillUnmount\r\n    useEffect(()=>{\r\n        console.log(\"mounted\");\r\n        return () => {\r\n            console.log(\"unmounting\");\r\n        }\r\n    }, []);\r\n\r\n    console.log(collection);\r\n    const {title, items} = collection;\r\n    return(\r\n    <div className='collection-page'>\r\n        <h2 className='title'>{title}</h2>\r\n        <div className='items'>\r\n            {\r\n                items.map(item => <CollectionItem key={item.id} item={item}/>)\r\n            }\r\n        </div>\r\n    </div>)\r\n};\r\n\r\n\r\n//Il secondo parametro ownProps indica i props di questo componente. Lo utilizziamo per passargli il nome del path (hats, jackets..)\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    collection: selectCollection(ownProps.match.params.collectionId)(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(Collection);"]},"metadata":{},"sourceType":"module"}