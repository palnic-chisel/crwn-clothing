{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/certimeter/Desktop/react/crwn-clothing/src/pages/shop/ShopPage.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionOverviewContainer from \"../../components/CollectionsOverview/CollectionOverviewContainer\";\nimport CollectionContainer from \"../collection/CollectionContainer\";\nimport { fetchCollectionsStart } from \"../../redux/shop/ShopActions\";\n\nconst ShopPage = ({\n  match,\n  fetchCollectionsStart\n}) => {\n  //per triggerare fetchCollection solo una volta lo mettiamo tra le dipendenze perche sappiamo che è un prop che non cambierà mai.\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/mnt/c/Users/certimeter/Desktop/react/crwn-clothing/src/pages/shop/ShopPage.jsx"],"names":["React","useEffect","Route","connect","CollectionOverviewContainer","CollectionContainer","fetchCollectionsStart","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,2BAAP,MAAwC,kEAAxC;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,SAAQC,qBAAR,QAAoC,8BAApC;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQF,EAAAA;AAAR,CAAD,KAAoC;AAEjD;AACAL,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,qBAAqB;AACxB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT;AAKA,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,KAAK,MADT;AAEI,IAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAFxB;AAGI,IAAA,SAAS,EAAEL,2BAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,IAAK,gBADxB;AAEI,IAAA,SAAS,EAAEJ,mBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAcH,CAtBD;;AAyBA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACpCL,EAAAA,qBAAqB,EAAE,MAAMK,QAAQ,CAACL,qBAAqB,EAAtB;AADD,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAClB,IADkB,EAElBO,kBAFkB,CAAP,CAGbH,QAHa,CAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {Route} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport CollectionOverviewContainer from \"../../components/CollectionsOverview/CollectionOverviewContainer\";\r\nimport CollectionContainer from \"../collection/CollectionContainer\";\r\nimport {fetchCollectionsStart} from \"../../redux/shop/ShopActions\";\r\n\r\n\r\nconst ShopPage = ({match, fetchCollectionsStart}) => {\r\n\r\n    //per triggerare fetchCollection solo una volta lo mettiamo tra le dipendenze perche sappiamo che è un prop che non cambierà mai.\r\n    useEffect(() => {\r\n        fetchCollectionsStart()\r\n    }, [fetchCollectionsStart]);\r\n\r\n\r\n    return (\r\n        <div className='shop-page'>\r\n            <Route\r\n                exact\r\n                path={`${match.path}`}\r\n                component={CollectionOverviewContainer}\r\n            />\r\n            <Route\r\n                path={`${match.path}/:collectionId`}\r\n                component={CollectionContainer}\r\n            />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\r\n});\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(ShopPage);"]},"metadata":{},"sourceType":"module"}