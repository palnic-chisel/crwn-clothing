{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/certimeter/Desktop/react/crwn-clothing/src/components/CartDropdown/CartDropdown.jsx\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport CustomButton from \"../custom-button/CustomButton\";\nimport CartItem from '../CartItem/CartItem';\nimport { selectCartItems } from \"../../redux/cart/cart-selectors\";\nimport { withRouter } from 'react-router-dom';\nimport './CartDropdownStyle.scss';\nimport { createStructuredSelector } from \"reselect\";\nimport { toggleCartHidden } from \"../../redux/cart/cart-action\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n})) : React.createElement(\"span\", {\n  className: \"empty-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"Your cart is empty\"), React.createElement(CustomButton, {\n  onClick: () => {\n    history.push('/checkout');\n    dispatch(toggleCartHidden());\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"GO TO CHECKOUT\")));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/mnt/c/Users/certimeter/Desktop/react/crwn-clothing/src/components/CartDropdown/CartDropdown.jsx"],"names":["React","connect","CustomButton","CartItem","selectCartItems","withRouter","createStructuredSelector","toggleCartHidden","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAAQC,eAAR,QAA8B,iCAA9B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AAEA,OAAO,0BAAP;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,gBAAR,QAA+B,8BAA/B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,KACjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQF,SAAS,CAACG,MAAV,GACIH,SAAS,CAACI,GAAV,CAAcC,QAAQ,IAClB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,GAKI;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPZ,EASI,oBAAC,YAAD;AAAc,EAAA,OAAO,EACjB,MAAM;AACFJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACH,GAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,CADJ,CADJ;;AAqBA,MAAMU,eAAe,GAAGX,wBAAwB,CAAC;AAC7CG,EAAAA,SAAS,EAAEL;AADkC,CAAD,CAAhD;AAIA,eAAeC,UAAU,CAACJ,OAAO,CAACgB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from \"react\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport CustomButton from \"../custom-button/CustomButton\";\r\nimport CartItem from '../CartItem/CartItem';\r\nimport {selectCartItems} from \"../../redux/cart/cart-selectors\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport './CartDropdownStyle.scss';\r\nimport {createStructuredSelector} from \"reselect\";\r\nimport {toggleCartHidden} from \"../../redux/cart/cart-action\";\r\n\r\nconst CartDropdown = ({cartItems, history, dispatch}) => (\r\n    <div className='cart-dropdown'>\r\n        <div className='cart-items'>\r\n            {\r\n                cartItems.length ?\r\n                    cartItems.map(cartItem => (\r\n                        <CartItem key={cartItem.id} item={cartItem}/>\r\n                    ))\r\n                    :\r\n                    <span className='empty-message'>Your cart is empty</span>\r\n            }\r\n            <CustomButton onClick={\r\n                () => {\r\n                    history.push('/checkout');\r\n                    dispatch(toggleCartHidden())\r\n                }\r\n            }>GO TO CHECKOUT</CustomButton>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}