{"ast":null,"code":"import _objectSpread from \"/mnt/c/Users/certimeter/Desktop/react/crwn-clothing/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/mnt/c/Users/certimeter/Desktop/react/crwn-clothing/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/certimeter/Desktop/react/crwn-clothing/src/components/SignIn/SignIn.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './SignInStyle.scss';\nimport FormInput from \"../form-input/FormInput\";\nimport CustomButton from \"../custom-button/CustomButton\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user-action\";\n\nconst SignIn = ({\n  emailSignInStart\n}, {\n  googleSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"already have account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"sign in with your coc\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    handleChange: handleChange,\n    label: \"email\",\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    handleChange: handleChange,\n    label: \"password\",\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Sign In With Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart(email, password))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/mnt/c/Users/certimeter/Desktop/react/crwn-clothing/src/components/SignIn/SignIn.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,SAAQC,iBAAR,EAA2BC,gBAA3B,QAAkD,8BAAlD;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,EAAqB;AAACD,EAAAA;AAAD,CAArB,KAA6C;AAAA,oBACdJ,QAAQ,CAAC;AAACO,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE;AAAtB,GAAD,CADM;AAAA;AAAA,QACjDC,eADiD;AAAA,QAChCC,cADgC;;AAAA,QAEjDH,KAFiD,GAE9BE,eAF8B,CAEjDF,KAFiD;AAAA,QAE1CC,QAF0C,GAE9BC,eAF8B,CAE1CD,QAF0C;;AAIxD,QAAMG,YAAY,GAAG,MAAMC,KAAN,IAAe;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAR,IAAAA,gBAAgB,CAACE,KAAD,EAAQC,QAAR,CAAhB;AACH,GAHD;;AAKA,QAAMM,YAAY,GAAGF,KAAK,IAAI;AAAA,0BACJA,KAAK,CAACG,MADF;AAAA,UACnBC,KADmB,iBACnBA,KADmB;AAAA,UACZC,IADY,iBACZA,IADY;AAE1BP,IAAAA,cAAc,mBAAKD,eAAL;AAAsB,OAACQ,IAAD,GAAQD;AAA9B,OAAd;AACH,GAHD;;AAKA,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,EAII;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAEG,YAAzB;AAAuC,IAAA,KAAK,EAAC,OAA7C;AAAqD,IAAA,IAAI,EAAC,OAA1D;AAAkE,IAAA,IAAI,EAAC,OAAvE;AACW,IAAA,KAAK,EAAEP,KADlB;AACyB,IAAA,QAAQ,MADjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAEO,YAAzB;AAAuC,IAAA,KAAK,EAAC,UAA7C;AAAwD,IAAA,IAAI,EAAC,UAA7D;AAAwE,IAAA,IAAI,EAAC,UAA7E;AACW,IAAA,KAAK,EAAEN,QADlB;AAC4B,IAAA,QAAQ,MADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAKI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,YAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,OAAO,EAAEJ,iBAFb;AAEgC,IAAA,cAAc,MAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,CALJ,CAJJ,CADJ;AAuBH,CArCD;;AAuCA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACpCf,EAAAA,iBAAiB,EAAE,MAAMe,QAAQ,CAACf,iBAAiB,EAAlB,CADG;AAEpCC,EAAAA,gBAAgB,EAAE,CAACE,KAAD,EAAQC,QAAR,KAAqBW,QAAQ,CAACd,gBAAgB,CAACE,KAAD,EAAQC,QAAR,CAAjB;AAFX,CAAL,CAAnC;;AAKA,eAAeP,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {connect} from 'react-redux'\r\n\r\nimport './SignInStyle.scss';\r\nimport FormInput from \"../form-input/FormInput\";\r\nimport CustomButton from \"../custom-button/CustomButton\";\r\n\r\nimport {googleSignInStart, emailSignInStart} from \"../../redux/user/user-action\";\r\n\r\nconst SignIn = ({emailSignInStart}, {googleSignInStart}) => {\r\n    const [userCredentials, setCredentials] = useState({email: '', password: ''});\r\n    const {email, password} = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        emailSignInStart(email, password);\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const {value, name} = event.target;\r\n        setCredentials({...userCredentials, [name]: value})\r\n    };\r\n\r\n    return (\r\n        <div className='sign-in'>\r\n            <h2>already have account</h2>\r\n            <span>sign in with your coc</span>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <FormInput handleChange={handleChange} label='email' name='email' type='email'\r\n                           value={email} required/>\r\n                <FormInput handleChange={handleChange} label='password' name='password' type='password'\r\n                           value={password} required/>\r\n                <div className='buttons'>\r\n                    <CustomButton type='submit'>Sign In</CustomButton>\r\n                    <CustomButton\r\n                        type='button'\r\n                        onClick={googleSignInStart} isGoogleSignIn>\r\n                        Sign In With Google\r\n                    </CustomButton>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart(email, password))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}